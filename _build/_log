### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules main.ml > main.ml.depends
# Target: bdd.ml.depends, tags: { extension:ml, file:bdd.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules bdd.ml > bdd.ml.depends # cached
# Target: expr.ml.depends, tags: { extension:ml, file:expr.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules expr.ml > expr.ml.depends # cached
# Target: expr.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:expr.cmo, file:expr.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o expr.cmo expr.ml # cached
# Target: bdd.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:bdd.cmo, file:bdd.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o bdd.cmo bdd.ml # cached
# Target: dimacs.ml.depends, tags: { extension:ml, file:dimacs.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules dimacs.ml > dimacs.ml.depends # cached
# Target: dimacs.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:dimacs.cmo, file:dimacs.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o dimacs.cmo dimacs.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc -v parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o lexer.cmo lexer.ml # cached
# Target: Tseitin.ml.depends, tags: { extension:ml, file:Tseitin.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules Tseitin.ml > Tseitin.ml.depends # cached
# Target: Tseitin.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Tseitin.cmo, file:Tseitin.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o Tseitin.cmo Tseitin.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o main.cmo main.ml
# Target: expr.cmx, tags: { compile, extension:cmx, extension:ml, file:expr.cmx, file:expr.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o expr.cmx expr.ml # cached
# Target: bdd.cmx, tags: { compile, extension:cmx, extension:ml, file:bdd.cmx, file:bdd.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o bdd.cmx bdd.ml # cached
# Target: dimacs.cmx, tags: { compile, extension:cmx, extension:ml, file:dimacs.cmx, file:dimacs.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o dimacs.cmx dimacs.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o lexer.cmx lexer.ml # cached
# Target: Tseitin.cmx, tags: { compile, extension:cmx, extension:ml, file:Tseitin.cmx, file:Tseitin.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o Tseitin.cmx Tseitin.ml # cached
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o main.cmx main.ml
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt unix.cmxa expr.cmx Tseitin.cmx bdd.cmx dimacs.cmx parser.cmx lexer.cmx main.cmx -o main.native
# Compilation successful.
